# Задание-1:
# Реализуйте описаную ниже задачу, используя парадигмы ООП:
# В школе есть Классы(5А, 7Б и т.д.), в которых учатся Ученики.
# У каждого ученика есть два Родителя(мама и папа).
# Также в школе преподают Учителя. Один учитель может преподавать
# в неограниченном кол-ве классов свой определенный предмет.
# Т.е. Учитель Иванов может преподавать математику у 5А и 6Б,
# но больше математику не может преподавать никто другой.

# Выбранная и заполненная данными структура должна решать следующие задачи:
# 1. Получить полный список всех классов школы
# 2. Получить список всех учеников в указанном классе
#  (каждый ученик отображается в формате "Фамилия И.О.")
# 3. Получить список всех предметов указанного ученика
#  (Ученик --> Класс --> Учителя --> Предметы)
# 4. Узнать ФИО родителей указанного ученика
# 5. Получить список всех Учителей, преподающих в указанном классе


class School:
    def __init__(self, classes, courses, students, teachers):
        self.classes = [classes]
        self.courses = [courses]
        self.students = [students]
        self.teachers = [teachers]


    def info(self):
        print(
            f'Классы школы: {self.classes}\n'
            f'Предметы изучаемые в школе: {self.courses}\n'
            f'Список учеников: {self.students}\n'
            f'Список учителей: {self.teachers}')

class Student(School):
    def __init__(self, classes, courses, students, teachers, parents):
        School.__init__(self, classes, courses, students, teachers)
        self.parents = parents

    def info(self):
        School.info(self)
        print(f'{self.students} родители {self.parents}')

sc = School('5А', 'Математика', 'Иванов И.И.', 'Сидорова О.П.')
sc.info()
print()
sc = School('7А', 'Python', 'Батюк Ю.В.', 'Андреева М.')
sc.info()
print()
st = Student('5А', 'Математика', 'Иванов И.И.', 'Сидорова О.П.', 'Иванова А.А., Иванов Б.Б.')
st.info()